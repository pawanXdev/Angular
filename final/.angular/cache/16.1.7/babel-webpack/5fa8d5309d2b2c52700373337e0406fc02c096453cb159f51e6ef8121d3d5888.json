{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { User } from \"../Models/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nclass UserService {\n  constructor(logger) {\n    this.logger = logger;\n    this.users = [new User('Steve Smith', 'Male', 'Monthly', 'Active'), new User('Mery Jane', 'Female', 'Yearly', 'Inactive'), new User('Mark Tyler', 'Male', 'Quaterly', 'Active')];\n    this.OnUserDetailsClicked = new EventEmitter();\n  }\n  OnShowUserDetails(user) {\n    this.OnUserDetailsClicked.emit(user);\n  }\n  GetAllUsers() {\n    return this.users;\n  }\n  CreateUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    this.logger.LogMessage(name, status);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.LoggerService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac\n});\nexport { UserService };","map":{"version":3,"names":["EventEmitter","User","UserService","constructor","logger","users","OnUserDetailsClicked","OnShowUserDetails","user","emit","GetAllUsers","CreateUser","name","gender","subType","status","push","LogMessage","i0","ɵɵinject","i1","LoggerService","factory","ɵfac"],"sources":["D:\\angular1\\angular-16-complete-course-main\\08-angular-services-dependency-injection\\final\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\nimport { User } from \"../Models/User\";\r\nimport { LoggerService } from \"./logger.service\";\r\n\r\n@Injectable()\r\nexport class UserService{\r\n    users: User[] = [\r\n        new User('Steve Smith', 'Male', 'Monthly', 'Active'),\r\n        new User('Mery Jane', 'Female', 'Yearly', 'Inactive'), \r\n        new User('Mark Tyler', 'Male', 'Quaterly', 'Active') \r\n    ];\r\n\r\n    constructor(private logger: LoggerService){\r\n\r\n    }\r\n\r\n    OnUserDetailsClicked: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n    OnShowUserDetails(user: User){\r\n        this.OnUserDetailsClicked.emit(user);\r\n    }\r\n\r\n    GetAllUsers(){\r\n        return this.users;\r\n    }\r\n\r\n    CreateUser(name: string, gender: string, subType: string, status: string){\r\n        let user = new User(name, gender, subType, status);\r\n        this.users.push(user);\r\n        this.logger.LogMessage(name, status);\r\n    }\r\n}"],"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AACxD,SAASC,IAAI,QAAQ,gBAAgB;;;AAGrC,MACaC,WAAW;EAOpBC,YAAoBC,MAAqB;IAArB,KAAAA,MAAM,GAANA,MAAM;IAN1B,KAAAC,KAAK,GAAW,CACZ,IAAIJ,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,EACpD,IAAIA,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,EACrD,IAAIA,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CACvD;IAMD,KAAAK,oBAAoB,GAAuB,IAAIN,YAAY,EAAQ;EAFnE;EAIAO,iBAAiBA,CAACC,IAAU;IACxB,IAAI,CAACF,oBAAoB,CAACG,IAAI,CAACD,IAAI,CAAC;EACxC;EAEAE,WAAWA,CAAA;IACP,OAAO,IAAI,CAACL,KAAK;EACrB;EAEAM,UAAUA,CAACC,IAAY,EAAEC,MAAc,EAAEC,OAAe,EAAEC,MAAc;IACpE,IAAIP,IAAI,GAAG,IAAIP,IAAI,CAACW,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAAC;IAClD,IAAI,CAACV,KAAK,CAACW,IAAI,CAACR,IAAI,CAAC;IACrB,IAAI,CAACJ,MAAM,CAACa,UAAU,CAACL,IAAI,EAAEG,MAAM,CAAC;EACxC;;AAzBSb,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB;AAAA;SAAXrB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}